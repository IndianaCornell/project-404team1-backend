openapi: 3.0.0
info:
  title: Foodies API
  version: "1.0.0"
  description: >
    API –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Ä–µ—Ü–µ–ø—Ç–∞–º–∏, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏, —É–ª—é–±–ª–µ–Ω–∏–º–∏ —Ç–∞ –ø—ñ–¥–ø–∏—Å–∫–∞–º–∏.
    –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î JWT –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é.

servers:
  - url: http://localhost:3000/api
    description: Local server

# üîê –ì–ª–æ–±–∞–ª—å–Ω–∞ –±–µ–∑–ø–µ–∫–∞ ‚Äî JWT –¥–ª—è –≤—Å—ñ—Ö –µ–Ω–¥–ø–æ—ñ–Ω—Ç—ñ–≤
security:
  - bearerAuth: []

tags:
  - name: Auth
    description: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
  - name: Users
    description: –ö–µ—Ä—É–≤–∞–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—è–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
  - name: Recipes
    description: CRUD –¥–ª—è —Ä–µ—Ü–µ–ø—Ç—ñ–≤
  - name: Categories
    description: –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç—Ä–∞–≤
  - name: Areas
    description: –†–µ–≥—ñ–æ–Ω–∏ –ø–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Å—Ç—Ä–∞–≤
  - name: Ingredients
    description: –Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏ –¥–ª—è —Ä–µ—Ü–µ–ø—Ç—ñ–≤
  - name: Favorites
    description: –£–ª—é–±–ª–µ–Ω—ñ —Ä–µ—Ü–µ–ø—Ç–∏
  - name: Subscriptions
    description: –ü—ñ–¥–ø–∏—Å–∫–∏ –º—ñ–∂ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏
  - name: Reviews
    description: –í—ñ–¥–≥—É–∫–∏ –Ω–∞ —Ä–µ—Ü–µ–ø—Ç–∏

paths:
  /auth/register:
    post:
      tags: [Auth]
      summary: –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: –£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"

  /auth/login:
    post:
      tags: [Auth]
      summary: –õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: –£—Å–ø—ñ—à–Ω–∏–π –ª–æ–≥—ñ–Ω
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"

  /users/me:
    get:
      tags: [Users]
      summary: –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      responses:
        "200":
          description: –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    patch:
      tags: [Users]
      summary: –û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        "200":
          description: –û–Ω–æ–≤–ª–µ–Ω–æ

  /users/{id}:
    get:
      tags: [Users]
      summary: –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —ñ–Ω—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      parameters:
        - $ref: "#/components/parameters/UserId"
      responses:
        "200":
          description: –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /recipes:
    get:
      tags: [Recipes]
      summary: –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ä–µ—Ü–µ–ø—Ç—ñ–≤
      parameters:
        - $ref: "#/components/parameters/CategoryParam"
        - $ref: "#/components/parameters/IngredientParam"
        - $ref: "#/components/parameters/PageParam"
      responses:
        "200":
          description: –ú–∞—Å–∏–≤ —Ä–µ—Ü–µ–ø—Ç—ñ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
    post:
      tags: [Recipes]
      summary: –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π —Ä–µ—Ü–µ–ø—Ç
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecipeRequest"
      responses:
        "201":
          description: –†–µ—Ü–µ–ø—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"

  /recipes/{id}:
    get:
      tags: [Recipes]
      summary: –î–µ—Ç–∞–ª—ñ —Ä–µ—Ü–µ–ø—Ç–∞
      parameters:
        - $ref: "#/components/parameters/RecipeId"
      responses:
        "200":
          description: –û–±‚Äô—î–∫—Ç —Ä–µ—Ü–µ–ø—Ç–∞
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
    patch:
      tags: [Recipes]
      summary: –û–Ω–æ–≤–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç
      parameters:
        - $ref: "#/components/parameters/RecipeId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecipeRequest"
      responses:
        "200":
          description: –†–µ—Ü–µ–ø—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ
    delete:
      tags: [Recipes]
      summary: –í–∏–¥–∞–ª–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç
      parameters:
        - $ref: "#/components/parameters/RecipeId"
      responses:
        "200":
          description: –í–∏–¥–∞–ª–µ–Ω–æ

  /recipes/{id}/favorite:
    post:
      tags: [Favorites]
      summary: –î–æ–¥–∞—Ç–∏ —Ä–µ—Ü–µ–ø—Ç –≤ —É–ª—é–±–ª–µ–Ω—ñ
      parameters:
        - $ref: "#/components/parameters/RecipeId"
      responses:
        "201":
          description: –î–æ–¥–∞–Ω–æ
    delete:
      tags: [Favorites]
      summary: –í–∏–¥–∞–ª–∏—Ç–∏ —Ä–µ—Ü–µ–ø—Ç –∑ —É–ª—é–±–ª–µ–Ω–∏—Ö
      parameters:
        - $ref: "#/components/parameters/RecipeId"
      responses:
        "200":
          description: –í–∏–¥–∞–ª–µ–Ω–æ

  /recipes/{id}/reviews:
    get:
      tags: [Reviews]
      summary: –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–≥—É–∫–∏
      parameters:
        - $ref: "#/components/parameters/RecipeId"
      responses:
        "200":
          description: –ú–∞—Å–∏–≤ –≤—ñ–¥–≥—É–∫—ñ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
    post:
      tags: [Reviews]
      summary: –î–æ–¥–∞—Ç–∏ –≤—ñ–¥–≥—É–∫
      parameters:
        - $ref: "#/components/parameters/RecipeId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReviewRequest"
      responses:
        "201":
          description: –í—ñ–¥–≥—É–∫ –¥–æ–¥–∞–Ω–æ

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    UserId:
      in: path
      name: id
      required: true
      schema: { type: string }
    RecipeId:
      in: path
      name: id
      required: true
      schema: { type: string }
    CategoryParam:
      in: query
      name: category
      schema: { type: string }
      description: –§—ñ–ª—å—Ç—Ä –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
    IngredientParam:
      in: query
      name: ingredient
      schema: { type: string }
      description: –§—ñ–ª—å—Ç—Ä –∑–∞ —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–æ–º
    PageParam:
      in: query
      name: page
      schema: { type: integer, minimum: 1 }
      description: –ù–æ–º–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏

  schemas:
    RegisterRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: secret123
        name:
          type: string
          example: Ivan

    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          example: user@example.com
        password:
          type: string
          example: secret123

    AuthResponse:
      type: object
      properties:
        token:
          type: string
          example: jwt_token_here
        user:
          $ref: "#/components/schemas/User"

    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        avatar_url:
          type: string

    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
        avatar_url:
          type: string

    Recipe:
      type: object
      properties:
        id: { type: string }
        title: { type: string }
        description: { type: string }
        instructions: { type: string }
        image_url: { type: string }
        category_id: { type: string }
        area_id: { type: string }
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/RecipeIngredient"

    RecipeRequest:
      type: object
      required: [title, description]
      properties:
        title: { type: string }
        description: { type: string }
        instructions: { type: string }
        image_url: { type: string }
        category_id: { type: string }
        area_id: { type: string }
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/RecipeIngredient"

    RecipeIngredient:
      type: object
      properties:
        ingredient_id: { type: string }
        quantity: { type: string }

    Review:
      type: object
      properties:
        id: { type: string }
        user_id: { type: string }
        content: { type: string }
        rating:
          type: integer
          minimum: 1
          maximum: 5
        created_at:
          type: string
          format: date-time

    ReviewRequest:
      type: object
      required: [rating, content]
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 5
        content:
          type: string
